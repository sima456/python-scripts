import pefile
import os
import time

def get_files(directory, file_ext=None):
    """
    Returns a list of files in a directory that have the specified file extension.

    :param directory: The path of the directory to search in.
    :param file_ext: An optional tuple of file extensions to filter by.
    """
    files = []
    for file in os.listdir(directory):
        path = os.path.join(directory, file)
        if os.path.isfile(path):
            if file_ext is None or os.path.splitext(path)[1][1:] in file_ext:
                files.append(path)
    return files

def is_unknown_section_name(file):
    """
    Returns True if any section in the PE file has an unknown name.

    :param file: The path of the PE file to analyze.
    """
    known_names = ("text", "bss", "data", "rsrc", "debug", "reloc", "winzip", "tls",
                   "UPX", "boom", "seau", "code", "Shared", "gentee", "CODE", "DATA",
                   "BSS", "CRT", "PAGE", "INIT", "res", "asp", "tsu", "TEXT")
    pe = pefile.PE(file, fast_load=True)
    for section in pe.sections:
        name = section.Name.decode()
        if name.strip('\x00') not in known_names:
            return True
    return False

if __name__ == '__main__':
    numberOfFiles = 0
    sizeOfInitializedData = 0
    abnormalName = 0
    dllCharacteristics = 0
    majorImageVersion = 0
    checkSumCount = 0
    malware = 0

    start = time.time()
    directory = '/home/kali/virus'
    file_ext = ('.exe', '.dll')
    fileList = get_files(directory, file_ext)
    for f in fileList:
        pe = pefile.PE(f, fast_load=True)
        numberOfFiles = numberOfFiles + 1
        if pe.OPTIONAL_HEADER.SizeOfInitializedData == 0:
            malware = malware + 1
        elif is_unknown_section_name(f) == 1:
            malware = malware + 1

    end = time.time()
    elapsed = end - start
    print("Malware Find: ", malware)
    print("The time for running this program: ", elapsed)
